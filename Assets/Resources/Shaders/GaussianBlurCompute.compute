#pragma kernel CSMain

static const float PI = 3.1415926538f;

RWTexture2D<float4> result;

Texture2D heightMap;
SamplerState sampler_heightMap;
float4 heightMap_TexelSize;
float resolution;

float gauss(float x, float y, float sigma) {
    return  1.0f / (2.0f * PI * sigma * sigma) * exp(-(x * x + y * y) / (2.0f * sigma * sigma));
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float2 coord = float2(id.x / resolution, id.y / resolution);

    //result[id.xy] = float4(x, y, 0, 0);

    float4 o = 0;
    float sum = 0;
    float2 uvOffset;
    float weight;

    int KERNEL_SIZE = 15;
    float _Sigma = 100;

    for (float x = -KERNEL_SIZE / 2; x <= KERNEL_SIZE / 2; x++)
    {
        for (float y = -KERNEL_SIZE / 2; y <= KERNEL_SIZE / 2; y++)
        {
            // Calculate the offset
            uvOffset = coord;

            uvOffset.x += heightMap_TexelSize.x * x;
            uvOffset.y += heightMap_TexelSize.y * y;

            // Determine the weights
            weight = gauss(x, y, _Sigma);
            o += heightMap.SampleLevel(sampler_heightMap, uvOffset, 0) * weight;
            sum += weight;
        }
    }

    o *= (1.0f / sum);
    result[id.xy] = o;
}